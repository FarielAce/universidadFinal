/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ConsultaAlumnMate extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
    };

    /**
     * Creates new form ConsultaAlumnMate
     */
    public ConsultaAlumnMate() {
        initComponents();
        cargarCombo();
        cargaCabecera();
        limpiarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLListAlumnMater = new javax.swing.JLabel();
        jLSeleccMateria = new javax.swing.JLabel();
        jCBListMater = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMateriasXAlumn = new javax.swing.JTable();
        jBSalir = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 153));

        jLListAlumnMater.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLListAlumnMater.setText("Listado alumnos por materia");

        jLSeleccMateria.setText("Seleccione una materia");

        jCBListMater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBListMaterActionPerformed(evt);
            }
        });

        jTMateriasXAlumn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTMateriasXAlumn);

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLListAlumnMater)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLSeleccMateria)
                            .addGap(18, 18, 18)
                            .addComponent(jCBListMater, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBSalir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLListAlumnMater)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSeleccMateria)
                    .addComponent(jCBListMater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jBSalir)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBListMaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBListMaterActionPerformed
        Materia buscada = (Materia) jCBListMater.getSelectedItem();
        limpiarTabla();
        cargarTabla(buscada.getId());
    }//GEN-LAST:event_jCBListMaterActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Materia> jCBListMater;
    private javax.swing.JLabel jLListAlumnMater;
    private javax.swing.JLabel jLSeleccMateria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMateriasXAlumn;
    // End of variables declaration//GEN-END:variables

    private void cargarCombo() {
        for (Materia mateCombo : Principal.controlMat.listarMateria()) {

            jCBListMater.addItem(mateCombo);

        }

    }

    private void cargaCabecera() {
        modelo.addColumn("ID");
        modelo.addColumn("DNI");
        modelo.addColumn("Apellido");
        modelo.addColumn("Nombre");
        jTMateriasXAlumn.setModel(modelo);
    }

    private void limpiarTabla() {
        int f = modelo.getRowCount() - 1;
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    private void mostrarAlumnos(Alumno buscada) {
        limpiarTabla();
        for (Inscripcion inscripcion : Principal.controlInsc.obtenerInscripcionesPorAlumno(buscada.getId())) {
            modelo.addRow(new Object[]{inscripcion.getAlumno().getId(), inscripcion.getAlumno().getDni(), inscripcion.getAlumno().getApellido(), inscripcion.getAlumno().getNombre()});
        }
    }

    private void cargarTabla(int id) {
        for (Alumno alu : Principal.controlInsc.obtenerAlumnosXMateria(id)) {
            modelo.addRow(new Object[]{alu.getId(),
                alu.getDni(),
                alu.getApellido(),
                alu.getNombre()
            });

        }
    }
}
